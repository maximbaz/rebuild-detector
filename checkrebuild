#!/bin/bash
#
# Detect broken packages that need to be rebuilt

shopt -s nullglob
shopt -s extglob
export log=$(mktemp /tmp/rebuild-detector.XXX)

get_broken_ldd_pkgs() {
    while IFS= read -rd: dir; do readlink -f "$dir"; done <<<"$PATH" |
    sort -u |
    xargs -I{} find -L "{}" -maxdepth 1 -type f -print0 |
    xargs -0 readlink -f |
    sort -u |
    parallel --will-cite 'ldd -r "{}" 2>/dev/null | grep -P "(not found|undefined symbol)" > >( c++filt >> $log ) && pacman -Qqo "{}"'
}

get_broken_python_pkgs() {
    command -v python >/dev/null || return
    python_version="$(python --version | cut -d'.' -f2)"
    pacman -Qqo /usr/lib/python3.!($python_version) 2>/dev/null
}

get_broken_perl_pkgs() {
    command -v perl >/dev/null || return
    perl_version="$(perl -v | grep -Po '\d+' | head -n2 | paste -sd '.\n')"
    pacman -Qqo /usr/lib/perl*/!($perl_version) 2>/dev/null
}

get_broken_pkgs() {
    {
        get_broken_ldd_pkgs
        get_broken_python_pkgs
        get_broken_perl_pkgs
    } | sort -u
}

get_repo_pkgs() {
    pacman -Sl | cut -d' ' -f1-2
    pacman -Qqm | awk '{print "foreign", $0}'
}

join -12 <(get_repo_pkgs | sort -k2) <(get_broken_pkgs) | awk '{ print $2 "\t" $1 }'

exit 0
